{
  "name": "docker-compose",
  "displayName": "Docker Compose",
  "description": "Manage Docker Compose services",
  "icon": "images/icon.png",
  "version": "0.5.0",
  "publisher": "p1c2u",
  "license": "MIT",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "docker",
    "compose",
    "container",
    "image"
  ],
  "bugs": {
    "url": "https://github.com/p1c2u/vscode-docker-compose/issues",
    "email": "maciag.artur@gmail.com"
  },
  "homepage": "https://github.com/p1c2u/vscode-docker-compose",
  "repository": {
    "type": "git",
    "url": "https://github.com/p1c2u/vscode-docker-compose.git"
  },
  "activationEvents": [
    "workspaceContains:**/docker-compose.yml",
    "workspaceContains:**/docker-compose.yaml",
    "onDebugInitialConfigurations"
  ],
  "main": "./out/extension",
  "contributes": {
    "views": {
      "dockerComposeView": [
        {
          "id": "dockerComposeProjects",
          "name": "Projects",
          "when": "config.docker-compose.showExplorer == true"
        },
        {
          "id": "dockerComposeServices",
          "name": "Services",
          "when": "config.docker-compose.showExplorer == true"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dockerComposeView",
          "title": "Docker Compose",
          "icon": "images/compose.svg"
        }
      ]
    },
    "commands": [
      {
        "command": "docker-compose.explorer.refresh",
        "title": "Refresh explorer",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        },
        "description": "Refresh Docker Compose explorer",
        "category": "Docker Compose Explorer"
      },
      {
        "command": "docker-compose.project.select",
        "title": "Select project",
        "description": "Docker Compose project select",
        "category": "Docker Compose Projects"
      },
      {
        "command": "docker-compose.project.start",
        "title": "Start project",
        "description": "Docker Compose project start",
        "category": "Docker Compose Projects"
      },
      {
        "command": "docker-compose.project.stop",
        "title": "Stop project",
        "description": "Docker Compose project stop",
        "category": "Docker Compose Projects"
      },
      {
        "command": "docker-compose.project.up",
        "title": "Create and Start project",
        "description": "Docker Compose project up",
        "category": "Docker Compose Projects"
      },
      {
        "command": "docker-compose.project.down",
        "title": "Stop and Remove project services",
        "description": "Docker Compose project down",
        "category": "Docker Compose Projects"
      },
      {
        "command": "docker-compose.service.shell",
        "title": "Open shell",
        "description": "Docker Compose service shell",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.create",
        "title": "Create",
        "icon": "$(repo-create)",
        "description": "Docker Compose service create",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.up",
        "title": "Create and Start",
        "icon": "$(debug-start)",
        "description": "Docker Compose service up",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.down",
        "title": "Stop and Remove",
        "icon": "$(trash)",
        "description": "Docker Compose service down",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.rm",
        "title": "Remove",
        "icon": "$(trash)",
        "description": "Docker Compose service remove",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.start",
        "title": "Start",
        "icon": "$(debug-start)",
        "description": "Docker Compose service start",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.pause",
        "title": "Pause",
        "icon": "$(debug-pause)",
        "description": "Docker Compose service pause",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.unpause",
        "title": "Unpause",
        "icon": "$(debug-continue)",
        "description": "Docker Compose service unpause",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.stop",
        "title": "Stop",
        "icon": "$(debug-stop)",
        "description": "Docker Compose service stop",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.restart",
        "title": "Restart",
        "description": "Docker Compose service restart",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.build",
        "title": "Build",
        "description": "Docker Compose service build",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.service.kill",
        "title": "Kill",
        "description": "Docker Compose service kill",
        "category": "Docker Compose Services"
      },
      {
        "command": "docker-compose.container.attach",
        "title": "Attach",
        "description": "Docker Compose container attach",
        "category": "Docker Compose Containers"
      },
      {
        "command": "docker-compose.container.logs",
        "title": "Open logs",
        "description": "Docker Compose container logs",
        "category": "Docker Compose Containers"
      },
      {
        "command": "docker-compose.container.start",
        "title": "Start",
        "icon": "$(debug-start)",
        "description": "Docker Compose container start",
        "category": "Docker Compose Containers"
      },
      {
        "command": "docker-compose.container.pause",
        "title": "Pause",
        "icon": "$(debug-pause)",
        "description": "Docker Compose container pause",
        "category": "Docker Compose Containers"
      },
      {
        "command": "docker-compose.container.unpause",
        "title": "Unpause",
        "icon": "$(debug-continue)",
        "description": "Docker Compose container unpause",
        "category": "Docker Compose Containers"
      },
      {
        "command": "docker-compose.container.stop",
        "title": "Stop",
        "icon": "$(debug-stop)",
        "description": "Docker Compose container stop",
        "category": "Docker Compose Containers"
      },
      {
        "command": "docker-compose.container.kill",
        "title": "Force stop",
        "description": "Docker Compose container kill",
        "category": "Docker Compose Containers"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "docker-compose.explorer.refresh",
          "when": "view == dockerComposeServices",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "docker-compose.project.up",
          "when": "view == dockerComposeServices && viewItem == docker-compose:project",
          "group": "docker-compose:project-2-general@0"
        },
        {
          "command": "docker-compose.project.start",
          "when": "view == dockerComposeServices && viewItem == docker-compose:project",
          "group": "docker-compose:project-2-general@1"
        },
        {
          "command": "docker-compose.project.stop",
          "when": "view == dockerComposeServices && viewItem == docker-compose:project",
          "group": "docker-compose:project-2-general@2"
        },
        {
          "command": "docker-compose.project.down",
          "when": "view == dockerComposeServices && viewItem == docker-compose:project",
          "group": "docker-compose:project-2-general@3"
        },
        {
          "command": "docker-compose.service.shell",
          "when": "view == dockerComposeServices && viewItem == docker-compose:service",
          "group": "docker-compose:service-1-top@1"
        },
        {
          "command": "docker-compose.service.create",
          "when": "view == dockerComposeServices && viewItem == docker-compose:service",
          "group": "inline@0"
        },
        {
          "command": "docker-compose.service.up",
          "when": "view == dockerComposeServices && viewItem == docker-compose:service",
          "group": "inline@1"
        },
        {
          "command": "docker-compose.service.start",
          "when": "view == dockerComposeServices && viewItem == docker-compose:created-service",
          "group": "inline@2"
        },
        {
          "command": "docker-compose.service.stop",
          "when": "view == dockerComposeServices && viewItem == docker-compose:created-service",
          "group": "inline@5"
        },
        {
          "command": "docker-compose.service.down",
          "when": "view == dockerComposeServices && viewItem == docker-compose:created-service",
          "group": "inline@6"
        },
        {
          "command": "docker-compose.service.restart",
          "when": "view == dockerComposeServices && viewItem == docker-compose:service",
          "group": "docker-compose:service-2-general@4"
        },
        {
          "command": "docker-compose.service.build",
          "when": "view == dockerComposeServices && viewItem == docker-compose:service",
          "group": "docker-compose:service-2-general@6"
        },
        {
          "command": "docker-compose.service.kill",
          "when": "view == dockerComposeServices && viewItem == docker-compose:service",
          "group": "docker-compose:service-2-general@7"
        },
        {
          "command": "docker-compose.container.logs",
          "when": "view == dockerComposeServices && viewItem == docker-compose:running-container",
          "group": "docker-compose:container-1-top@0"
        },
        {
          "command": "docker-compose.container.attach",
          "when": "view == dockerComposeServices && viewItem == docker-compose:running-container",
          "group": "docker-compose:container-1-top@1"
        },
        {
          "command": "docker-compose.container.kill",
          "when": "view == dockerComposeServices && viewItem == docker-compose:running-container",
          "group": "docker-compose:container-2-general@2"
        },
        {
          "command": "docker-compose.container.start",
          "when": "view == dockerComposeServices && viewItem == docker-compose:exited-container",
          "group": "inline@7"
        },
        {
          "command": "docker-compose.container.pause",
          "when": "view == dockerComposeServices && viewItem == docker-compose:running-container",
          "group": "inline@8"
        },
        {
          "command": "docker-compose.container.unpause",
          "when": "view == dockerComposeServices && viewItem == docker-compose:container",
          "group": "inline@9"
        },
        {
          "command": "docker-compose.container.stop",
          "when": "view == dockerComposeServices && viewItem == docker-compose:running-container",
          "group": "inline@10"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Docker Compose configuration",
      "properties": {
        "docker-compose.projectNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Override Docker Compose project name for each workspace root."
        },
        "docker-compose.autoRefreshInterval": {
          "type": "integer",
          "default": 90000,
          "description": "Docker Compose auto refresh interval."
        },
        "docker-compose.showExplorer": {
          "type": "boolean",
          "default": true,
          "description": "Show Docker Compose explorer."
        },
        "docker-compose.enableTelemetry": {
          "type": "boolean",
          "default": false,
          "description": "Enable telemetry"
        },
        "docker-compose.shell": {
          "type": "string",
          "default": "/bin/sh",
          "description": "Specify shell to use inside Docker Container."
        },
        "docker-compose.files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Specify Docker Compose files."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.2.0",
    "@types/vscode": "^1.74.0",
    "@vscode/test-electron": "^1.6.1",
    "typescript": "^5.0.4"
  },
  "dependencies": {
    "applicationinsights": "^1.0.5",
    "docker-compose": "^0.24.1",
    "yaml-config-loader": "^2.0.1"
  }
}
