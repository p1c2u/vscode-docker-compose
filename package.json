{
  "name": "docker-compose",
  "displayName": "Docker Compose",
  "description": "Manage Docker Compose services",
  "icon": "images/icon.png",
  "version": "0.3.5",
  "publisher": "p1c2u",
  "license": "MIT",
  "engines": {
    "vscode": "^1.25.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "docker",
    "compose",
    "container",
    "image"
  ],
  "bugs": {
    "url": "https://github.com/p1c2u/vscode-docker-compose/issues",
    "email": "maciag.artur@gmail.com"
  },
  "homepage": "https://github.com/p1c2u/vscode-docker-compose",
  "repository": {
    "type": "git",
    "url": "https://github.com/p1c2u/vscode-docker-compose.git"
  },
  "activationEvents": [
    "workspaceContains:**/docker-compose.yml",
    "onCommand:docker-compose.explorer.refresh",
    "onCommand:docker-compose.project.start",
    "onCommand:docker-compose.project.stop",
    "onCommand:docker-compose.project.up",
    "onCommand:docker-compose.project.down",
    "onCommand:docker-compose.service.shell",
    "onCommand:docker-compose.service.up",
    "onCommand:docker-compose.service.down",
    "onCommand:docker-compose.service.start",
    "onCommand:docker-compose.service.stop",
    "onCommand:docker-compose.service.restart",
    "onCommand:docker-compose.service.build",
    "onCommand:docker-compose.service.kill",
    "onCommand:docker-compose.container.attach",
    "onCommand:docker-compose.container.logs",
    "onCommand:docker-compose.container.start",
    "onCommand:docker-compose.container.stop",
    "onCommand:docker-compose.container.kill",
    "onView:dockerCompose",
    "onDebugInitialConfigurations"
  ],
  "main": "./out/extension",
  "contributes": {
    "views": {
      "dockerComposeView": [
        {
          "id": "dockerCompose",
          "name": "Explorer",
          "when": "config.docker-compose.showExplorer == true"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dockerComposeView",
          "title": "Docker Compose",
          "icon": "images/compose.svg"
        }
      ]
    },
    "commands": [
      {
        "command": "docker-compose.explorer.refresh",
        "title": "Refresh explorer",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        },
        "description": "Refresh Docker Compose explorer",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.project.start",
        "title": "Start",
        "description": "Docker Compose project start",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.project.stop",
        "title": "Stop",
        "description": "Docker Compose project stop",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.project.up",
        "title": "Up",
        "description": "Docker Compose project up",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.project.down",
        "title": "Down",
        "description": "Docker Compose project down",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.service.shell",
        "title": "Shell",
        "description": "Docker Compose service shell",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.service.up",
        "title": "Up",
        "description": "Docker Compose service up",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.service.down",
        "title": "Down",
        "description": "Docker Compose service down",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.service.start",
        "title": "Start",
        "description": "Docker Compose service start",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.service.stop",
        "title": "Stop",
        "description": "Docker Compose service stop",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.service.restart",
        "title": "Restart",
        "description": "Docker Compose service restart",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.service.build",
        "title": "Build",
        "description": "Docker Compose service build",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.service.kill",
        "title": "Kill",
        "description": "Docker Compose service kill",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.container.attach",
        "title": "Attach",
        "description": "Docker Compose container attach",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.container.logs",
        "title": "Logs",
        "description": "Docker Compose container logs",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.container.start",
        "title": "Start",
        "description": "Docker Compose container start",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.container.stop",
        "title": "Stop",
        "description": "Docker Compose container stop",
        "category": "Docker Compose"
      },
      {
        "command": "docker-compose.container.kill",
        "title": "Kill",
        "description": "Docker Compose container kill",
        "category": "Docker Compose"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "docker-compose.explorer.refresh",
          "when": "view == dockerCompose",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "docker-compose.project.start",
          "when": "view == dockerCompose && viewItem == docker-compose:project",
          "group": "docker-compose:project@0"
        },
        {
          "command": "docker-compose.project.stop",
          "when": "view == dockerCompose && viewItem == docker-compose:project",
          "group": "docker-compose:project@1"
        },
        {
          "command": "docker-compose.project.up",
          "when": "view == dockerCompose && viewItem == docker-compose:project",
          "group": "docker-compose:project@2"
        },
        {
          "command": "docker-compose.project.down",
          "when": "view == dockerCompose && viewItem == docker-compose:project",
          "group": "docker-compose:project@3"
        },
        {
          "command": "docker-compose.service.shell",
          "when": "view == dockerCompose && viewItem == docker-compose:service",
          "group": "docker-compose:service@1"
        },
        {
          "command": "docker-compose.service.up",
          "when": "view == dockerCompose && viewItem == docker-compose:service",
          "group": "docker-compose:service@2"
        },
        {
          "command": "docker-compose.service.down",
          "when": "view == dockerCompose && viewItem == docker-compose:service",
          "group": "docker-compose:service@8"
        },
        {
          "command": "docker-compose.service.start",
          "when": "view == dockerCompose && viewItem == docker-compose:service",
          "group": "docker-compose:service@3"
        },
        {
          "command": "docker-compose.service.stop",
          "when": "view == dockerCompose && viewItem == docker-compose:service",
          "group": "docker-compose:service@4"
        },
        {
          "command": "docker-compose.service.restart",
          "when": "view == dockerCompose && viewItem == docker-compose:service",
          "group": "docker-compose:service@5"
        },
        {
          "command": "docker-compose.service.build",
          "when": "view == dockerCompose && viewItem == docker-compose:service",
          "group": "docker-compose:service@6"
        },
        {
          "command": "docker-compose.service.kill",
          "when": "view == dockerCompose && viewItem == docker-compose:service",
          "group": "docker-compose:service@7"
        },
        {
          "command": "docker-compose.container.attach",
          "when": "view == dockerCompose && viewItem == docker-compose:running-container",
          "group": "docker-compose:container@0"
        },
        {
          "command": "docker-compose.container.logs",
          "when": "view == dockerCompose && viewItem == docker-compose:running-container",
          "group": "docker-compose:container@1"
        },
        {
          "command": "docker-compose.container.start",
          "when": "view == dockerCompose && viewItem == docker-compose:exited-container",
          "group": "docker-compose:container@0"
        },
        {
          "command": "docker-compose.container.stop",
          "when": "view == dockerCompose && viewItem == docker-compose:running-container",
          "group": "docker-compose:container@1"
        },
        {
          "command": "docker-compose.container.kill",
          "when": "view == dockerCompose && viewItem == docker-compose:running-container",
          "group": "docker-compose:container@2"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Docker Compose configuration",
      "properties": {
        "docker-compose.projectNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Override Docker Compose project name for each workspace root."
        },
        "docker-compose.autoRefreshInterval": {
          "type": "integer",
          "default": 90000,
          "description": "Docker Compose auto refresh interval."
        },
        "docker-compose.showExplorer": {
          "type": "boolean",
          "default": true,
          "description": "Show Docker Compose explorer."
        },
        "docker-compose.enableTelemetry": {
          "type": "boolean",
          "default": false,
          "description": "Enable telemetry"
        },
        "docker-compose.shell": {
          "type": "string",
          "default": "/bin/sh",
          "description": "Specify shell to use inside Docker Container."
        },
        "docker-compose.files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "compose.yaml",
            "compose.yml",
            "docker-compose.yaml",
            "docker-compose.yml"
          ],
          "description": "Specify Docker Compose files."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run build",
    "build": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "npm run build && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "typescript": "^3.2.1",
    "vscode": "^1.1.18",
    "@types/node": "^7.0.43",
    "@types/mocha": "^2.2.42"
  },
  "dependencies": {
    "applicationinsights": "^1.0.5",
    "yaml-config-loader": "^2.0.1"
  }
}
